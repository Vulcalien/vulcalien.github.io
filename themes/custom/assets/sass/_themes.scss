@mixin toggle-theme-button($theme) {
  button.toggle-theme g.light {
    visibility: if($theme == 'light', visible, hidden);
  }

  button.toggle-theme g.dark {
    visibility: if($theme == 'dark', visible, hidden);
  }
}

// input:
// - $h in [0, 360), hue
// - $s in [0, 1], saturation
// - $v in [0, 1], value
// output:
// - RGB color
@function hsv($h, $s, $v) {
  $c: $v * $s;
  $x: $c * (1 - abs(($h / 60) % 2 - 1));

  $rgb: nth([
    [$c, $x, 0 ],
    [$x, $c, 0 ],
    [0,  $c, $x],
    [0,  $x, $c],
    [$x, 0,  $c],
    [$c, 0,  $x],
  ], 1 + floor($h / 60));

  $r: round( (nth($rgb, 1) + $v - $c) * 255 );
  $g: round( (nth($rgb, 2) + $v - $c) * 255 );
  $b: round( (nth($rgb, 3) + $v - $c) * 255 );

  @return rgb($r, $g, $b);
}

body.light {
  --primary:   #{hsv(0, 0, .13)};
  --secondary: #{hsv(0, 0, .15)};
  --tertiary:  #{hsv(0, 0, .40)};

  --links: #{hsv(155, 1, .5)};

  --background-primary:   #{hsv(0, 0, 1)};
  --background-secondary: #{hsv(0, 0, .95)};

  .site-header, .site-footer {
    --primary:  inherit;
    --tertiary: inherit;

    --background-primary:   #{hsv(0, 0, .95)};
    --background-secondary: #{hsv(0, 0, .90)};
  }

  @include toggle-theme-button(light);
}

body.dark {
  --primary:   #{hsv(0, 0, .86)};
  --secondary: #{hsv(0, 0, .77)};
  --tertiary:  #{hsv(0, 0, .69)};

  --links: #{hsv(155, .8, .72)};

  --background-primary:   #{hsv(220, 0.1, .1)};
  --background-secondary: #{hsv(220, 0.1, .15)};

  .site-header, .site-footer {
    --primary:  inherit;
    --tertiary: inherit;

    --background-primary:   #{hsv(220, 0.1, .125)};
    --background-secondary: #{hsv(220, 0.1, .175)};
  }

  @include toggle-theme-button(dark);
}
